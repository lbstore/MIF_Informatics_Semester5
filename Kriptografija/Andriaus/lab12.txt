
# ====================== DSA ====================== #

A='abcdefghijklmnopqrstuvwxyz0123456789'
def hash(text,n):
    t=''
    for r in text:
        if r in A:
            ind=A.index(r)+1
            if ind<10: t=t+'0'+str(ind)
            else: t=t+str(ind)
    return int(t,10)%n  


q = next_prime(234546567)
m = 100
p = (q * m) + 1
while is_prime(p) == false:
    m = m +2
    p = (q * m) + 1
p, q, m

c = 67867
al = power_mod(c, m, p)
al, power_mod(al, q, p)

a = 45678

bt = power_mod(al, a, p)
bt

p, q, al, bt

x = hash("andriuskirilovas", p - 100)
x

k = q - 100
katv = 1/k % q
katv

gama = power_mod(al, k, p) % q
gama

delta = ((x + a * gama) * katv) % q
delta

(gama, delta)

# Verification

deltaatv = 1/delta % q
e1 = (x * deltaatv) % q
e2 = (gama * deltaatv) % q

(e1, e2)

((power_mod(al, e1, p) * power_mod(bt, e2, p)) % p ) % q == gama

#DSA:
#tekstas: andriuskirilovas
#hash: 1183717956
#parašas: (γ, δ) = (86408384, 25909584)
#viešas raktas: ⟨p, q, α, β⟩ = (26269219313, 234546601, 6565814998, 12593032647)




# ====================== Gouillou-Quisquater ====================== #

A='abcdefghijklmnopqrstuvwxyz0123456789'
def hash(text,n):
    t=''
    for r in text:
        if r in A:
            ind=A.index(r)+1
            if ind<10: t=t+'0'+str(ind)
            else: t=t+str(ind)
    return int(t,10)%n  

def h(m, n):
    return ((n - m)^2 + m) % n  

hash("bandymas",100000)

p = next_prime(5467567845)
q = next_prime(234546567)
n = p * q
fi = (p - 1) * (q - 1)

e = 1239037
gcd(e,fi) # <- turi buti 1

I = 1232342
gcd(I,n) # <- turi buti 1

d = 1/e % fi
a = power_mod(1/I, d, n)
(I * power_mod(a,e,n)) % n

n,e,I

x = hash("andriuskirilovas", p - 100)
x

k = 4356
r = power_mod(k,e,n)
l = h(x + r, n)
s = (k * power_mod(a, l, n)) % n
s, l

# Verification

u = (power_mod(s,e,n) * power_mod(I,l,n)) % n
ls = h(x + u, n)
ls == l




#Gouillou-Quisquater:
#tekstas: andriuskirilovas
#hash: 1183717956
#parašas: (s, l) = (149844771577824681, 1227763672017228402)
#viešas raktas: (n, e, I) = (1282399459879856471, 1239037, 1232342)



# ====================== ESIGN ====================== #

A='abcdefghijklmnopqrstuvwxyz0123456789'
def hash(text,n):
    t=''
    for r in text:
        if r in A:
            ind=A.index(r)+1
            if ind<10: t=t+'0'+str(ind)
            else: t=t+str(ind)
    return int(t,10)%n  

def h(m, n):
    return ((n - m)^2 + m) % n  

hash("bandymas",100000)

p = next_prime(5467567845)
q = next_prime(234546567)
n = p * p * q
k = 4356

p, q, n, k

x = hash("andriuskirilovas", p - 100)
x

v = h(x, n)
r = 234234
w = ceil(((v - r^k) % n) / (p * q))
y = (w * 1/(k * r^(k-1))) % p
s = (r + (y * p * q)) % n
s

# Verification

u = power_mod(s, k, n)
z = h(x, n)
pow = ceil((2/3) * math.log(n, 2))

z <= u <= 2^pow


#ESIGN:
#tekstas: andriuskirilovas
#hash: 1183717956
#parašas: s = 5503194530570622374107578005
#viešas raktas: (n, k) = (7011606084626856760931043241, 4356)